name: ci
on: push
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v15
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: keep-outputs = true
      - name: Cache nix store
        id: nix-store-cache
        uses: actions/cache@v3
        with:
          path: ./nix-store-cache
          key: nix-store-cache-20220809-1-${{ github.sha }}
          restore-keys: |
            nix-store-cache-20220809-1-
      - name: Import nix store cache
        run: |
          if [ -e ./nix-store-cache ]; then
            nix-store --import < ./nix-store-cache
            rm ./nix-store-cache
          fi
      - name: Build devShell
        run: |
          nix build .#devShell.$(nix eval --expr 'builtins.currentSystem' --impure --raw) --out-link result-devShell
          nix print-dev-env > result-devShell.sh
          echo "BASH_ENV=$PWD/result-devShell.sh" >> $GITHUB_ENV
      - name: Install dependencies
        run: |
          nix profile install --inputs-from . nixpkgs#skopeo
      - name: Cache cargo target
        uses: actions/cache@v3
        with:
          path: ./target
          key: cargo-cache-20220809-1-${{ github.sha }}
          restore-keys: |
            cargo-cache-20220809-1-
      - name: Cache cargo home
        uses: actions/cache@v3
        with:
          path: ~/.cargo
          key: cargo-home-20220809-1-${{ github.sha }}
          restore-keys: |
            cargo-home-20220809-1-
      - name: Format
        run: |
          cargo fmt --check
      - name: Lint
        # cargo clippyはglibcの関係でLinuxで動かないのでとりあえず
        run: |
          cargo-clippy
      - name: Test
        run: |
          cargo test
      - name: crate2nix
        run: |
          crate2nix generate
          git diff --exit-code
      - name: Build server
        run: |
          nix build .#tkvs-server --out-link result-server
      - uses: actions/upload-artifact@v3
        with:
          name: tkvs-server
          path: result-server/bin/tkvs-server
      - name: Build client
        run: |
          nix build .#tkvs-client --out-link result-client
      - uses: actions/upload-artifact@v3
        with:
          name: tkvs-client
          path: result-client/bin/tkvs-client
      - name: Export nix store cache
        run: |
          nix-collect-garbage
          nix-store --export $(nix path-info --all) > ./nix-store-cache
